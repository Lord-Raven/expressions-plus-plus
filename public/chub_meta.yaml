# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the extension.
project_name: "Expression Packs++"

# A short tagline to show in search.
tagline: "Shows character emotions based on a set of images.++"

# A longer explanation. Supports Markdown format.
creator_notes: "
_Hey, can you all just ignore it if this randomly breaks while I work on it? I'm developing from my phone, 
and I'm too lazy to properly spin up a fork to experiment with new stuff. 
I'm putting some safeguards in place but no promises. Sorry for the inconvenience._  
  
This is a shameless knock-off of the [official Expression Packs stage](https://chub.ai/extensions/BartlebyTheScrivener/expressions-extension-768927333d4d). 
You can add this stage to any chat by searching for it under Stages in Chat Settings, but you may want to read some of this beforehand.  

### No Expression Pack Support 

_Unlike_ that stage, this one doesn't actually support expression packs; they appear to currently be locked to the official stage. Write your congressperson. 
When this changes, I'll update this stage to use the character's pack by default.  

### So, Uh, What Is This, Then? 

This stage generates its own expression images by crafting a visual description of each character and making image generation calls to produce various emotional states.  

The system works with any single-character bot or even personae, but _it uses lots of image generation credits_ (unless you have a Mars subscription, which is unlimited), and your mileage may vary quality-wise. 
Images may initially take time to appear as they must be generated; they are lazy loaded, so they don't hold up the chat so much. 
You can regenerate individual images and create different \"outfits\" using the characters' settings in the upper-right corner.  

This stage also generates background images based on the scene. These are not lazy loaded because it causes saving issues, and they can easily become out of sync. 
They can add quite a bit of load time to responses when they occur, but they can also be disabled from the stage's configuration menu. 

From the configuration menu, you can also alter the basic art style element of the stage's image prompts, to taylor the style to suit your aesthetic.  

### Improvements Over the Original 

<li>This stage discards neutral emotion determinations when a secondary emotion is over a certain threshold, which causes characters to appear more expressive.<br>
<li>This stage can be used with any character, without manual effort by the author.<br>
<li>This stage has some fancy multi-character support. You will need to refresh the chat after adding a new character, though.<br>
<li>This stage supports persona images.<br>
<li>This stage allows you to toggle character outfits or visibility from within the stage UI itself.<br>
<li>This stage adds backgrounds.<br>

### Disimprovements Under the Original 

<li>This stage does not support actual expression packs.<br>
<li>If you don't have a Mars subscription, this could use an exorbitant amount of credits.<br>

### External Dependencies 

This stage leverages [SamLowe/roberta-base-go_emotions](https://huggingface.co/SamLowe/roberta-base-go_emotions) for emotion inference ([my HF space for this](https://huggingface.co/spaces/Ravenok/emotions)) 
and [MoritzLaurer/ModernBERT-large-zeroshot-v2.0](https://huggingface.co/MoritzLaurer/ModernBERT-large-zeroshot-v2.0) for zero-shot classification ([my HF space for that](https://huggingface.co/spaces/Ravenok/statosphere-backend)).

### Image Generation and Sensitive Material 

This stage doesn't directly contain any NSFW material and doesn't do anything to prompt NSFW images, but a lot of the content is dependent upon the nature of 
the characters and narrative that are being depicted. Chub's image generation will outright fail on triggering words or phrases that it deems sensitive; 
the system appears to use a rather naive test for this purpose, and because the stage relies on generated art prompts, 
I have implemented some simple key word substitution to avoid needless failures, but there are
undoubtedly situations that will still fail. The character management UI will indicate this next to each outfit.  

### Updates  

2025.07.19:

- Please ignore what is bound to be a series of potentially breaking updates as I experiment with the new storage API. 
I am attempting to gate this off so it doesn't break the entire stage, but I'm playing real loose with it. 

2025.07.10: 

- Started to do some outfit initialization configuration and then rolled it back; Lore confirmed that expression pack support are coming to other stages soon, so I will wait patiently for that.

2025.07.08: 

- Added a blank where you can modify the outfit description or copy/paste outfit details to effectively export and import them into new outfits, characters, or chats. 

2025.07.01: 

- Added image prompt details and warnings to each outfit tabs in the management UI. 

- Minor prompt revisions. 

2025.06.29: 

- UI revisions, mostly to make the stage usable on mobile. 

- Fixed background generation triggering too frequently. 

2025.06.28: 

- User persona support. 

- Outfit management. 

- Visibility toggles for characters. 

- Users and multi-character or narrator bots are invisible by default, to avoid confusing situations. 

- Images are now generated as-needed, which can mean a delay in initial use, but you can still manually pre-load them from character management. 

- Various prompt improvements. 
"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PUBLIC'

position: 'ADJACENT'

# Self-explanatory.
tags:
 - 'Extension'
 - 'Expressions'
 - 'Expression Packs'
 - 'Emotions'
 - 'Stage'
 - 'Add-on'

config_schema:
  title: Expressions Config
  type: object
  properties:
    generateCharacters:
      title: Generate Character Art
      description: Automatically generate an expression pack for characters (will expend daily credits); this is basically all the stage currently does, so maybe leave this one on.
      type: string
      default: "True"
      enum: ["True", "False"]
    generateBackgrounds:
      title: Generate Background Art
      description: Automatically generate backgrounds during scene changes.
      type: string
      default: "True"
      enum: ["True", "False"]
    artStyle:
      title: Art Style
      description: A brief description of the desired character art style.
      type: string
      default: "Bold, visual novel style illustration, clean lines"
    alphaMode:
      title: Alpha Mode
      description: Enable experimental stuff. Maybe don't use this if your username isn't Ravenok.
      type: string
      default: "False"
      enum: ["True", "False"]
    selected:
      # The beginning of non-standard JSON Schema behavior.
      # JSchema isn't great with the concept of dynamic
      # schema generation. This is our little addition
      # to make it easy to define "I need this setting for each character".
      type: "character_map"
      # Could also be an object, etc.
      value_type:
        type: "string",
        enum: 'character.extensions.chub.alt_expressions.keys()'
        default: 'default'
      # For the type "character_map",
      # this is a boolean instead of the normal list.
      # If true, required for each character.
      required: false
      # Information shown beside this part of the form.
      description: "Which expression pack to use, if there are multiple."

github_path: 'https://github.com/Lord-Raven/expressions-plus-plus'

extension_id: 'expressions-plus-plus-a8db5f0bd422'
