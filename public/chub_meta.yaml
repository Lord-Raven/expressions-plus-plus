# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the extension.
project_name: "Expressions++"

# A short tagline to show in search.
tagline: "Shows character emotions based on a set of images.++"

# A longer explanation. Supports Markdown format.
creator_notes: "This is a shameless knock-off of the [official Expression Packs stage](https://chub.ai/extensions/BartlebyTheScrivener/expressions-extension-768927333d4d)."

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PRIVATE'

position: 'ADJACENT'

# Self-explanatory.
tags:
 - 'Extension'
 - 'Expressions'
 - 'Expression Packs'
 - 'Emotions'
 - 'Stage'
 - 'Add-on'

# The schema of any user-supplied config.
# If your extension requires a configuration but has no
#   defined schema, it won't work.
# Config schemas are a superset of JSON Schema format
# @link https://json-schema.org
# Whether this REQUIRES a user-given configuration,
#   versus being able to handle nulls/default values.
needs_config: false
config_schema:
  title: Expressions Config
  description: "Some settings to play with. Bother me if you think of something else."
  type: object
  properties:
    generateCharacters:
      title: Generate Character Art
      description: Automatically generate an expression pack for characters (will expend daily credits); this is basically all the stage currently does, so maybe leave this one on.
      type: boolean
      default: true
    generateBackgrounds:
      title: Generate Background Art
      description: Automatically generate backgrounds during scene changes.
      type: boolean
      default: true
    artStyle:
      title: Art Style
      description: A brief description of the desired character art style.
      type: string
      default "Bold, visual novel style illustration, clean lines"
  required: []

github_path: 'https://github.com/Lord-Raven/expressions-plus-plus'

extension_id: 'expressions-plus-plus-a8db5f0bd422'
