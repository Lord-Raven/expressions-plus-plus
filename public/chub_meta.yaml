# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the extension.
project_name: "Expressions++"

# A short tagline to show in search.
tagline: "Shows character emotions based on a set of images.++"

# A longer explanation. Supports Markdown format.
creator_notes: "
This is a shameless knock-off of the [official Expression Packs stage](https://chub.ai/extensions/BartlebyTheScrivener/expressions-extension-768927333d4d).


_However_, unlike that stage, this one doesn't actually support expression packs; they appear to currently be locked to the official stage. 


**So, uh, what is this, then?**<br>
This stage generates its own expression images by producing a visual description of each character and 
then making lots of image generation calls. 


Images my initially take time to appear as they must be generated up front; they are lazy loaded, so you can continue to chat while the stage gets things ready.


The result is that it works with any character, but _it uses lots of image generation tokens_ (if you aren't paying for Mars), and your mileage may vary.


This stage also generates background images based on the scene. These are also lazy loaded, but because they are history-sensitive, it is currently very easy to get the background out of sync with the chat.


**External Dependences**<br>
This stage leverages [SamLowe/roberta-base-go_emotions](https://huggingface.co/SamLowe/roberta-base-go_emotions) for emotion inference ([my HF space for this](https://huggingface.co/spaces/Ravenok/emotions)) 
and [MoritzLaurer/ModernBERT-large-zeroshot-v2.0](https://huggingface.co/MoritzLaurer/ModernBERT-large-zeroshot-v2.0) for zero-shot classification ([my HF space for that](https://huggingface.co/spaces/Ravenok/statosphere-backend)).
"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PRIVATE'

position: 'ADJACENT'

# Self-explanatory.
tags:
 - 'Extension'
 - 'Expressions'
 - 'Expression Packs'
 - 'Emotions'
 - 'Stage'
 - 'Add-on'

# The schema of any user-supplied config.
# If your extension requires a configuration but has no
#   defined schema, it won't work.
# Config schemas are a superset of JSON Schema format
# @link https://json-schema.org
# Whether this REQUIRES a user-given configuration,
#   versus being able to handle nulls/default values.
needs_config: false
config_schema:
  title: Expressions Config
  description: Some settings to play with. Bother me if you think of something else.
  type: object
  properties:
    generateCharacters:
      title: Generate Character Art
      description: Automatically generate an expression pack for characters (will expend daily credits); this is basically all the stage currently does, so maybe leave this one on.
      type: string
      default: "true"
      enum: ["true", "false"]
    generateBackgrounds:
      title: Generate Background Art
      description: Automatically generate backgrounds during scene changes.
      type: "true"
      enum: ["true", "false"]
    artStyle:
      title: Art Style
      description: A brief description of the desired character art style.
      type: string
      default "Bold, visual novel style illustration, clean lines"

github_path: 'https://github.com/Lord-Raven/expressions-plus-plus'

extension_id: 'expressions-plus-plus-a8db5f0bd422'
